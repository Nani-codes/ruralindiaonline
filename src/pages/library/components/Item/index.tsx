import styles from '../../../../styles/library.module.css';
import Image from 'next/image';
import { HeadingOne, RegularText, Label, LabelDesc } from '@/component/Text';
import Link from 'next/link';
import MapService from '@/Services/MapService';
import { useCallback, useEffect, useState } from 'react';

export default function Item({ item }: any) {
	const [city, setCity] = useState('');
	const {
		attributes: {
			Title,
			Location,
			slug,
			tags: { data },
			Thumbnail: {
				data: {
					attributes: { url },
				},
			},
		},
	} = {
		attributes: {
			Title: item?.attributes?.Title,
			Location: item?.attributes?.Location,
			slug: item?.attributes?.slug,
			tags: {
				data: item?.tags?.data,
			},
			Thumbnail: {
				data: {
					attributes: {
						url: item?.attributes?.Thumbnail?.data?.attributes?.url,
					},
				},
			},
		},
	};

	const getCity = useCallback(async () => {
		if (Location) {
			const loc = JSON.parse(Location);
			if (loc) {
				const result = await MapService.getAddress(`${loc.lat},${loc.lng}`);
				if (result.isOk()) {
					const { value } = result;
					setCity(value?.plus_code?.compound_code);
				}
			}
		}
	}, [Location]);

	useEffect(() => {
		getCity();
	}, [getCity]);

	return (
		<div>
			<div className=' sm:block sm2:block lg:hidden md:hidden xl:hidden 2xl:hidden 3xl:hiddens '>
				<Link href={`/library/${slug}`} className={` card ${styles['card']}`}>
					<div className='w-382 h-162 flex'>
						{/* <div className="w-112">
    <Image
        className=""
          src={`${process.env.NEXT_PUBLIC_API_URL}${url}`}
          width={112}
          height={162}
          alt={Title}
          style={{ objectFit: 'cover', width: 112, height:162 }}

/> 
    </div> */}

						<div className='w-112' style={{ width: 112, height: 162 }}>
							<Image
								className=''
								src={`${process.env.NEXT_PUBLIC_API_URL}${url}`}
								width={112}
								height={162}
								alt={Title}
								style={{ objectFit: 'cover', width: '100%', height: '100%' }}
							/>
						</div>

						<div className='w-254' style={{ width: '254px', height: '50px' }}>
							<div
								style={{
									width: '254px',
									height: '50px',
									marginLeft: 10,
									fontFamily: 'Noto Sans',
									fontWeight: 600,
									fontSize: '18px',
									lineHeight: '25.2px',
									letterSpacing: '-4%',
									overflow: 'hidden',
									textOverflow: 'ellipsis',
									display: '-webkit-box',
									WebkitBoxOrient: 'vertical',
									WebkitLineClamp: 2, // Number of lines to show before truncating
								}}>
								{Title}
							</div>
							<RegularText style={{ marginLeft: 10 }} className={`desc  ${styles['desc']} ml-2`}>
								Testing city
							</RegularText>

							<div className='ml-2 '>
								<svg width='104' height='20' viewBox='0 0 104 20' fill='none' xmlns='http://www.w3.org/2000/svg'>
									<path
										d='M3.679 5.218C4.45033 5.218 5.08733 5.31767 5.59 5.517C6.09267 5.71633 6.46533 6.01967 6.708 6.427C6.95067 6.82567 7.072 7.33267 7.072 7.948C7.072 8.39867 6.99833 8.78433 6.851 9.105C6.70367 9.42567 6.50433 9.69433 6.253 9.911C6.01033 10.119 5.746 10.288 5.46 10.418L7.956 14.5H5.98L3.965 10.834H2.834V14.5H1.092V5.218H3.679ZM3.601 6.609H2.834V9.469H3.627C3.99967 9.469 4.30733 9.41267 4.55 9.3C4.80133 9.18733 4.98767 9.02267 5.109 8.806C5.239 8.58933 5.304 8.32067 5.304 8C5.304 7.662 5.24333 7.39333 5.122 7.194C5.00067 6.986 4.81433 6.83867 4.563 6.752C4.31167 6.65667 3.991 6.609 3.601 6.609ZM13.8097 14.5H8.80466V5.218H13.8097V6.609H10.5467V8.975H13.6017V10.366H10.5467V13.096H13.8097V14.5ZM20.7186 14.5L20.0036 12.043H16.8316L16.1166 14.5H14.2446L17.3646 5.179H19.4576L22.5906 14.5H20.7186ZM18.8466 8.221C18.812 8.08233 18.7643 7.91767 18.7036 7.727C18.6516 7.52767 18.5996 7.324 18.5476 7.116C18.5043 6.908 18.461 6.713 18.4176 6.531C18.383 6.739 18.3396 6.947 18.2876 7.155C18.2356 7.35433 18.1836 7.545 18.1316 7.727C18.0883 7.909 18.045 8.07367 18.0016 8.221L17.2736 10.613H19.5876L18.8466 8.221ZM30.6065 9.768C30.6065 10.808 30.4201 11.679 30.0475 12.381C29.6835 13.083 29.1548 13.6117 28.4615 13.967C27.7681 14.3223 26.9361 14.5 25.9655 14.5H23.4175V5.218H26.2255C27.1268 5.218 27.9068 5.39133 28.5655 5.738C29.2241 6.08467 29.7268 6.596 30.0735 7.272C30.4288 7.93933 30.6065 8.77133 30.6065 9.768ZM28.7865 9.82C28.7865 9.08333 28.6868 8.47667 28.4875 8C28.2968 7.52333 28.0065 7.17233 27.6165 6.947C27.2351 6.713 26.7628 6.596 26.1995 6.596H25.1595V13.109H26.0045C26.9405 13.109 27.6381 12.836 28.0975 12.29C28.5568 11.7353 28.7865 10.912 28.7865 9.82ZM37.6466 5.218C38.4179 5.218 39.0549 5.31767 39.5576 5.517C40.0602 5.71633 40.4329 6.01967 40.6756 6.427C40.9182 6.82567 41.0396 7.33267 41.0396 7.948C41.0396 8.39867 40.9659 8.78433 40.8186 9.105C40.6712 9.42567 40.4719 9.69433 40.2206 9.911C39.9779 10.119 39.7136 10.288 39.4276 10.418L41.9236 14.5H39.9476L37.9326 10.834H36.8016V14.5H35.0596V5.218H37.6466ZM37.5686 6.609H36.8016V9.469H37.5946C37.9672 9.469 38.2749 9.41267 38.5176 9.3C38.7689 9.18733 38.9552 9.02267 39.0766 8.806C39.2066 8.58933 39.2716 8.32067 39.2716 8C39.2716 7.662 39.2109 7.39333 39.0896 7.194C38.9682 6.986 38.7819 6.83867 38.5306 6.752C38.2792 6.65667 37.9586 6.609 37.5686 6.609ZM47.7772 14.5H42.7722V5.218H47.7772V6.609H44.5142V8.975H47.5692V10.366H44.5142V13.096H47.7772V14.5ZM51.9822 5.218C53.1089 5.218 53.9366 5.46933 54.4652 5.972C54.9939 6.47467 55.2582 7.168 55.2582 8.052C55.2582 8.45067 55.2019 8.832 55.0892 9.196C54.9766 9.55133 54.7859 9.872 54.5172 10.158C54.2572 10.444 53.9106 10.6693 53.4772 10.834C53.0439 10.9987 52.5109 11.081 51.8782 11.081H51.0462V14.5H49.3042V5.218H51.9822ZM51.9172 6.596H51.0462V9.703H51.6962C52.0776 9.703 52.4026 9.651 52.6712 9.547C52.9399 9.43433 53.1436 9.261 53.2822 9.027C53.4296 8.793 53.5032 8.48967 53.5032 8.117C53.5032 7.60567 53.3732 7.22433 53.1132 6.973C52.8532 6.72167 52.4546 6.596 51.9172 6.596ZM64.5267 9.846C64.5267 10.5653 64.4444 11.2197 64.2797 11.809C64.1151 12.3897 63.8594 12.8923 63.5127 13.317C63.1747 13.7417 62.7457 14.0667 62.2257 14.292C61.7057 14.5173 61.0947 14.63 60.3927 14.63C59.6821 14.63 59.0667 14.5173 58.5467 14.292C58.0267 14.058 57.5977 13.733 57.2597 13.317C56.9217 12.8923 56.6661 12.3853 56.4927 11.796C56.3281 11.2067 56.2457 10.5523 56.2457 9.833C56.2457 8.871 56.3931 8.03467 56.6877 7.324C56.9911 6.61333 57.4504 6.063 58.0657 5.673C58.6811 5.27433 59.4611 5.075 60.4057 5.075C61.3417 5.075 62.1131 5.27433 62.7197 5.673C63.3264 6.063 63.7771 6.61767 64.0717 7.337C64.3751 8.04767 64.5267 8.884 64.5267 9.846ZM58.0917 9.846C58.0917 10.548 58.1697 11.1503 58.3257 11.653C58.4817 12.1557 58.7287 12.5413 59.0667 12.81C59.4134 13.0787 59.8554 13.213 60.3927 13.213C60.9301 13.213 61.3677 13.0787 61.7057 12.81C62.0437 12.5413 62.2907 12.1557 62.4467 11.653C62.6027 11.1503 62.6807 10.548 62.6807 9.846C62.6807 8.79733 62.4987 7.974 62.1347 7.376C61.7794 6.778 61.1987 6.479 60.3927 6.479C59.8554 6.479 59.4134 6.61333 59.0667 6.882C58.7287 7.15067 58.4817 7.53633 58.3257 8.039C58.1697 8.54167 58.0917 9.144 58.0917 9.846ZM68.6496 5.218C69.4209 5.218 70.0579 5.31767 70.5606 5.517C71.0632 5.71633 71.4359 6.01967 71.6786 6.427C71.9212 6.82567 72.0426 7.33267 72.0426 7.948C72.0426 8.39867 71.9689 8.78433 71.8216 9.105C71.6742 9.42567 71.4749 9.69433 71.2236 9.911C70.9809 10.119 70.7166 10.288 70.4306 10.418L72.9266 14.5H70.9506L68.9356 10.834H67.8046V14.5H66.0626V5.218H68.6496ZM68.5716 6.609H67.8046V9.469H68.5976C68.9702 9.469 69.2779 9.41267 69.5206 9.3C69.7719 9.18733 69.9582 9.02267 70.0796 8.806C70.2096 8.58933 70.2746 8.32067 70.2746 8C70.2746 7.662 70.2139 7.39333 70.0926 7.194C69.9712 6.986 69.7849 6.83867 69.5336 6.752C69.2822 6.65667 68.9616 6.609 68.5716 6.609ZM77.0772 14.5H75.3222V6.622H72.9042V5.218H79.4822V6.622H77.0772V14.5Z'
										fill='#B82929'
									/>
									<path
										d='M91.5 15L96.5 10L91.5 5'
										stroke='#B82929'
										strokeWidth='2'
										strokeLinecap='round'
										strokeLinejoin='round'
									/>
								</svg>
							</div>
						</div>
					</div>
				</Link>
			</div>
		</div>
	);
}
